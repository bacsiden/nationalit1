@model Alabama.Customer_Info
@{
    ViewBag.Title = "NewOrEdit";
}
<div class="row-fluid">
    <div class="span12">
        <div class="box">
            <div class="box-title">
                <h3>
                    <i class="icon-table"></i>NewOrEdit Customer Info</h3>
            </div>
            <div class="box-content">
                <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
                <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.ValidationSummary(true)                    

                    @Html.HiddenFor(model => model.Customer_ID)
                    
                    <div class="control-group">
                        <label class="control-label" for="Customer_Name">@Html.LabelFor(model => model.Customer_Name)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Customer_Name, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Customer_Name)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="Street">@Html.LabelFor(model => model.Street)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Street, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Street)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="City">@Html.LabelFor(model => model.City)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.City, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.City)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="State">@Html.LabelFor(model => model.State)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.State, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.State)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="ZIP_Code">@Html.LabelFor(model => model.ZIP_Code)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.ZIP_Code, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.ZIP_Code)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="Phone">@Html.LabelFor(model => model.Phone)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Phone, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Phone)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="Fax">@Html.LabelFor(model => model.Fax)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Fax, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Fax)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="Contact">@Html.LabelFor(model => model.Contact)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Contact, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Contact)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="Comments">@Html.LabelFor(model => model.Comments)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextAreaFor(model => model.Comments, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Comments)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="Days_to_pay">@Html.LabelFor(model => model.Days_to_pay)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Days_to_pay, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Days_to_pay)
                            </div>
                        </div>
                    </div>                    
                    <div class="form-actions">
                        <input type="submit" value="Save" class="btn btn-info" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>
