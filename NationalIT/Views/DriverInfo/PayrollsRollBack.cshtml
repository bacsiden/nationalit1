@model NationalIT.TempReport
@using Webdiyer.WebControls.Mvc;
@{
    ViewBag.Title = "Driver's Payrolls";
}
@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
//            // trip
//            ListenerCheckBox($("#TripAmountTable .DriverTripCheckAll"), $("#TripAmountTable .DriverTripCheckItem"), $("#TripsAmount"));
//            //fuel expenses
//            ListenerCheckBox($("#Fuel_ExpensesAmount .DriverFuel___ExpensesAll"), $("#Fuel_ExpensesAmount .DriverFuel___ExpensesItem"), $("#FuelAmount"));
//            //operating expenses
//            ListenerCheckBox($("#Operating_ExpensesAmount .DriverOperating_ExpensesAll"), $("#Operating_ExpensesAmount .DriverOperating_ExpensesItem"), $("#OperatingAmount"));
//            //Driver split expenses
//            ListenerCheckBox($("#DriverExpensesSplit .SplitcheckAll"), $("#DriverExpensesSplit .Splitcheckitem"), $("#DriversAmount"));
//            ListenerCheckAll($("#DriverExpensesSplit .SplitcheckAll"), $("#DriverExpensesSplit .Splitcheckitem"));
//            //Owner split expenses
//            ListenerCheckBox($("#OwnerExpensesSplit .SplitcheckAll"), $("#OwnerExpensesSplit .Splitcheckitem"), $("#OwnersAmount"));
//            ListenerCheckAll($("#OwnerExpensesSplit .SplitcheckAll"), $("#OwnerExpensesSplit .Splitcheckitem"));
            $(".btnRollBack").click(function () {
                if (!confirm("Are you sure you want process this Roll Back?")) {
                    return false;
                }
                var Trips = getListIDCheckBoxByIDClassName("TripAmountTable", "DriverTripCheckItem");
                var Fuel = getListIDCheckBoxByIDClassName("Fuel_ExpensesAmount", "DriverFuel___ExpensesItem");
                var operating = getListIDCheckBoxByIDClassName("Operating_ExpensesAmount", "DriverOperating_ExpensesItem");
                var splitdriver = getListIDCheckBoxByIDClassName("DriverExpensesSplit", "Splitcheckitem");
                var splitowner = getListIDCheckBoxByIDClassName("OwnerExpensesSplit", "Splitcheckitem");
                var driverid = '';
                var url = $(this).attr('href');
                var newurl = addParam(addParam(addParam(addParam(addParam(addParam(url, "driverid", driverid), "Trips", Trips), "Fuel", Fuel), "operating", operating), "splitdriver", splitdriver), "splitowner", splitowner);
                window.open(newurl, '_blank');
                return false;
            });
        });
        function ListenerCheckBox(objCheckAll, objCheckItem, TotalAmount) {
            objCheckAll.click(function () {
                if ($(this).is(':checked')) {
                    var checkAll = 0;
                    objCheckItem.each(function () {
                        checkAll = parseFloat(checkAll) + parseFloat($(this).val());
                    });
                    TotalAmount.val("$" + formatCurrency(checkAll));
                } else {
                    TotalAmount.val("$0.00");
                }
            });
            objCheckItem.click(function () {
                var $this = $(this);
                var tripAmount = 0;
                if ($this.is(':checked')) {
                    var countChecked = 0;
                    objCheckItem.each(function () {
                        if ($(this).is(":checked")) {
                            countChecked++;
                        }
                    });
                    if (countChecked == objCheckItem.length) {
                        objCheckAll.prop('checked', true);
                    }
                } else {
                    objCheckAll.prop('checked', false);
                }
                // Duyệt toàn bộ các checkbox được checked và lấy giá trị cộng dồn lại
                objCheckItem.each(function () {
                    if ($(this).is(":checked")) {
                        tripAmount = parseFloat(tripAmount) + parseFloat($(this).val());
                    }
                });
                TotalAmount.val("$" + formatCurrency(tripAmount));
            });
        }
        function ListenerCheckAll(checkAll, checkItem) {
            checkAll.click(function () {
                if ($(this).is(':checked')) {
                    checkItem.prop('checked', true);
                } else {
                    checkItem.prop('checked', false);
                }
            });
        }
        function formatCurrency(num) {
            num = isNaN(num) || num === '' || num === null ? 0.00 : num;
            return parseFloat(num).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }
    </script>
}
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            <a href="#" class="btn btn-info btnRePrint">RePrint</a>
            <a href="#" class="btn btn-info btnRollBack">RollBack</a>
            <a href="@Url.Action("Index", "DriverInfo")" class="btn">Back</a>
        </div>
    </div>
     <div class="row-fluid">
        <div class="span12">
            <select data-placeholder="Select Date" name="Date" class="chosen-with-diselect-date input-xlarge">
                @Html.Raw(ViewBag.dataDate)
            </select>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12 wrap-ALlPartial">
            @Html.Partial("_IndexUndoPayrollPartial",Model)
        </div>
    </div>
</div>
