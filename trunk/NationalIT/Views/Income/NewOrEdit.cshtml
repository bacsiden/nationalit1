@model NationalIT.Income
@{
    ViewBag.Title = "Income";
}
<div class="row-fluid">
    <div class="span12">
        <div class="box">
            <div class="box-title">
                <h3>
                    <i class="icon-table"></i>Income</h3>
            </div>
            <div class="box-content">
                <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
                <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.ValidationSummary(true)                    

                    @Html.HiddenFor(model => model.IncomeID)
                    
                    <div class="control-group">
                        <label class="control-label" for="IncomeDate">@Html.LabelFor(model => model.IncomeDate)</label>
                        <div class="controls">
                            <div class="span12">
                                @*<input type="text" name="username" id="username" class="input-xlarge" data-rule-required="true" data-rule-minlength="3" />*@
                                @Html.TextBoxFor(model => model.IncomeDate, new { Value = Model != null && Model.IncomeDate.HasValue ? Model.IncomeDate.Value.ToString("MM/dd/yyyy") : "", @class = "input-xlarge date-picker" })
                                @Html.ValidationMessageFor(model => model.IncomeDate)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="AmountInvoiced">@Html.LabelFor(model => model.AmountInvoiced)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.AmountInvoiced, new { @class = "input-xlarge" }) ($)
                                @Html.ValidationMessageFor(model => model.AmountInvoiced)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="FundedAmount">@Html.LabelFor(model => model.FundedAmount)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.FundedAmount, new { @class = "input-xlarge" }) ($)
                                @Html.ValidationMessageFor(model => model.FundedAmount)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="ReserveAmount">@Html.LabelFor(model => model.ReserveAmount)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.ReserveAmount, new { @class = "input-xlarge" }) ($)
                                @Html.ValidationMessageFor(model => model.ReserveAmount)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="AdvanceFee">@Html.LabelFor(model => model.AdvanceFee)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.AdvanceFee, new { @class = "input-xlarge" }) ($)
                                @Html.ValidationMessageFor(model => model.AdvanceFee)
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="ChargeBacks">@Html.LabelFor(model => model.ChargeBacks)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.ChargeBacks, new { @class = "input-xlarge" }) ($)
                                @Html.ValidationMessageFor(model => model.ChargeBacks)
                            </div>
                        </div>
                    </div>
                     <div class="control-group">
                        <label class="control-label" for="Comments">@Html.LabelFor(model => model.Comments)</label>
                        <div class="controls">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.Comments, new { @class = "input-xlarge" })
                                @Html.ValidationMessageFor(model => model.Comments)
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <input type="submit" value="Save" class="btn btn-info" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>
